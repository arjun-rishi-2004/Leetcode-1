 
Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

My solution:
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        nums.sort()
        count=False
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                #print(nums[i],nums[j])
                if nums[i]==nums[j]:
                    return True
        return count

Notes:
My solution is actually workng for 60% of testcases .but for others it exceeds the time limit since it sorts the list and uses two for loop

There was no need to sort the list if I am using two for loops, it simply increases the time complexity

The optimal solution:

*Use a hashset
it is efficient in identifying duplicates and iterating through the list

Solution:
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        uniq=set()
        for num in nums:
            if num in uniq:
                return True
            uniq.add(num)
        return False
